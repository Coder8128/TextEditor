import string
import tkinter as tk
from tkinter import Tk, scrolledtext, Menu, filedialog, END, messagebox, simpledialog
import tkinter.scrolledtext as ScrolledText
from tkinter import *
import matplotlib
import matplotlib.pyplot as plt
matplotlib.use("TkAgg")
import pandas as pd

root = Tk (className = " Text Editor")
textArea = ScrolledText.ScrolledText(root, width = 100, height = 50)
textArea.pack()


def newFile():
    if len(textArea.get('1.0', END+'-1c')) > 0:
        if messagebox.askyesno("Save", "Would you like to save?"):
            saveFile()
        else:
            textArea.delete('1.0', END)
    root.title("TEXT EDITOR")
def OpenFile():
    file = filedialog.askopenfile(parent = root, title = 'Select a text file', filetypes = (("Text file", ".txt"),("All files", "*.*")))
    if file != None:
        contents = file.read()
        textArea.insert('1.0', contents)
        file.close()

def saveFile():
    file = filedialog.asksaveasfile(mode='w')
    if file!= None:
        data = textArea.get('1.0', END+'-1c')
        file.write(data)
        file.close()
def exit():
    if messagebox.askyesno("Quit", "Are you sure you want to quit?"):
        root.destroy()

def PlotButton():
    text = open("dest.txt", "r")
    d = dict()

    for line in text:
        line = line.strip()
        line = line.lower()
        line = line.translate(line.maketrans("", "", string.punctuation))
        words = line.split(" ")
        for word in words:
            for i in word:
                if i in d:
                    d[i] = d[i] + 1
                else:
                    d[i] = 1

    test = ('\n'.join(key+':'+str(val) for key, val in d.items()))
    char_list = list(test)
    df = pd.DataFrame({'chars': char_list})
    df = df[df.chars != ' ']
    df['num'] = 1
    df = df.groupby('chars').sum().sort_values('num', ascending=False) / len(df)
    plt.bar(df.index, df.num, width=0.5, color='g')
    plt.show()

def about():
    label = messagebox.showinfo("About", "A simple text editor 0.2")
def AnalyzeLetters():
    text = open("dest.txt", "r")
    d = dict()

    for line in text:
        line = line.strip()
        line = line.lower()
        line = line.translate(line.maketrans("", "", string.punctuation))
        words = line.split(" ")
        for word in words:
            for i in word:
                if i in d:
                    d[i] = d[i] + 1
                else:
                    d[i] = 1

    win = tk.Toplevel(root)
    win.geometry('+%s+%s' % (root.winfo_x() + 100, root.winfo_y() + 50))
    win.transient(root)
    result = tk.Text(win, width=40, height=20)
    result.pack()
    for key in sorted(d.keys()):
        result.insert('end', '%s: %s\n' % (key, d[key]))
    win.grab_set()


def CountWords():
    text = open("dest.txt", "r")
    d = dict()
    for line in text:
        line = line.strip()

        line = line.lower()

        words = line.split(" ")

        for word in words:
            if word in d:
                d[word] = d[word] + 1
            else:
                d[word] = 1
    win = tk.Toplevel(root)
    win.geometry('+%s+%s' % (root.winfo_x() + 100, root.winfo_y() + 50))
    win.transient(root)
    result = tk.Text(win, width=40, height=20)
    result.pack()
    for key in sorted(d.keys()):
        result.insert('end', '%s: %s\n' % (key, d[key]))
    win.grab_set()
def create_window():
    root = tk.Tk()
    root.title("Analized data")
    text1 = tk.Text(root, height=10, width=50)

    text1.config(state="normal")
    text1.insert(tk.INSERT,"Check")
    text1.pack()
    root.mainloop()

menu = Menu(root)
root.config(menu=menu)
FMenu = Menu(menu)
menu.add_cascade(label = "File", menu = FMenu)
FMenu.add_command(label = "New", command = newFile)
FMenu.add_command(label = "Open", command = OpenFile)
FMenu.add_command(label = "Save", command = saveFile)
FMenu.add_separator()
FMenu.add_command(label = "Exit", command = exit)

helpMenu = Menu(menu)
menu.add_cascade(label = "Count leters", command = AnalyzeLetters)
menu.add_cascade(label = "Count words", command = CountWords)
menu.add_cascade(label = "Create plot", command = PlotButton)
menu.add_cascade(label = "About", command = about)

textArea.pack()
root.mainloop()
